////////////////////////////////////////////////////////////////////////////////
// Подсистема "Работа с почтовыми сообщениями".
//
////////////////////////////////////////////////////////////////////////////////
//

#Область ПрограммныйИнтерфейс

// Функция для отправки сообщений. Проверяет корректность заполнения учетной
// записи и вызывает функцию, реализующую механику отправки.
//
// См. параметры функции ОтправитьСообщение.
// 
// Примечание: параметр ПараметрыПисьма.Вложения может содержать вместо двоичных данных адреса во
//   временном хранилище, по которым хранятся эти данные.
//
Функция ОтправитьПочтовоеСообщение(Знач УчетнаяЗапись,
	                               Знач ПараметрыПисьма,
	                               Знач Соединение = Неопределено) Экспорт
	
	Если ТипЗнч(УчетнаяЗапись) <> Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты")
		Или НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ВызватьИсключение НСтр("ru = 'Учетная запись не заполнена или заполнена неправильно.'");
	КонецЕсли;
	
	Если ПараметрыПисьма = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Не заданы параметры отправки.'");
	КонецЕсли;
	
	ТипЗнчКому = ?(ПараметрыПисьма.Свойство("Кому"), ТипЗнч(ПараметрыПисьма.Кому), Неопределено);
	ТипЗнчКопии = ?(ПараметрыПисьма.Свойство("Копии"), ТипЗнч(ПараметрыПисьма.Копии), Неопределено);
	ТипЗнчСлепыеКопии = ?(ПараметрыПисьма.Свойство("СлепыеКопии"), ТипЗнч(ПараметрыПисьма.СлепыеКопии), Неопределено);
	
	Если ТипЗнчКому = Неопределено И ТипЗнчКопии = Неопределено И ТипЗнчСлепыеКопии = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Не указано ни одного получателя.'");
	КонецЕсли;
	
	Если ТипЗнчКому = Тип("Строка") Тогда
		ПараметрыПисьма.Кому = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(ПараметрыПисьма.Кому);
	ИначеЕсли ТипЗнчКому <> Тип("Массив") Тогда
		ПараметрыПисьма.Вставить("Кому", Новый Массив);
	КонецЕсли;
	
	Если ТипЗнчКопии = Тип("Строка") Тогда
		ПараметрыПисьма.Копии = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(ПараметрыПисьма.Копии);
	ИначеЕсли ТипЗнчКопии <> Тип("Массив") Тогда
		ПараметрыПисьма.Вставить("Копии", Новый Массив);
	КонецЕсли;
	
	Если ТипЗнчСлепыеКопии = Тип("Строка") Тогда
		ПараметрыПисьма.СлепыеКопии = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(ПараметрыПисьма.СлепыеКопии);
	ИначеЕсли ТипЗнчСлепыеКопии <> Тип("Массив") Тогда
		ПараметрыПисьма.Вставить("СлепыеКопии", Новый Массив);
	КонецЕсли;
	
	Если ПараметрыПисьма.Свойство("АдресОтвета") И ТипЗнч(ПараметрыПисьма.АдресОтвета) = Тип("Строка") Тогда
		ПараметрыПисьма.АдресОтвета = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(ПараметрыПисьма.АдресОтвета);
	КонецЕсли;
	
	Если ПараметрыПисьма.Свойство("Вложения") Тогда
		Если ТипЗнч(ПараметрыПисьма.Вложения) = Тип("Соответствие") Тогда
			Для Каждого Вложение Из ПараметрыПисьма.Вложения Цикл
				ДанныеВложения = Вложение.Значение;
				Если РаботаСПочтовымиСообщениямиСлужебный.ПривестиВложениеДляВставкиВПисьмо(ДанныеВложения) Тогда
					ПараметрыПисьма.Вложения.Вставить(Вложение.Ключ, ДанныеВложения);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат РаботаСПочтовымиСообщениямиСлужебный.ОтправитьСообщение(УчетнаяЗапись, ПараметрыПисьма, Соединение);
	
КонецФункции

// Функция для загрузки сообщений. Проверяет корректность заполнения учетной
// записи и вызывает функцию, реализующую механику загрузки сообщений.
// 
// Параметры к функции см. в функции ЗагрузитьСообщения.
//
Функция ЗагрузитьПочтовыеСообщения(Знач УчетнаяЗапись,
                                   Знач ПараметрыЗагрузки = Неопределено) Экспорт
	
	ИспользоватьДляПолучения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, "ИспользоватьДляПолучения");
	Если НЕ ИспользоватьДляПолучения Тогда
		ВызватьИсключение НСтр("ru = 'Учетная запись не предназначена для получения сообщений.'");
	КонецЕсли;
	
	Если ПараметрыЗагрузки = Неопределено Тогда
		ПараметрыЗагрузки = Новый Структура;
	КонецЕсли;
	
	Результат = РаботаСПочтовымиСообщениямиСлужебный.ЗагрузитьСообщения(УчетнаяЗапись, ПараметрыЗагрузки);
	
	Возврат Результат;
	
КонецФункции

// Получить доступные учетные записи электронной почты.
// Параметры:
// ДляОтправки - Булево - Если установлено Истина, то будут выбирать только записи, с которых можно отправлять почту.
// ДляПолучения   - Булево - Если установлено Истина, то будут выбирать только записи, по которым можно получать почту.
// ВключатьСистемнуюУчетнуюЗапись - Булево - включать системную учетную запись, если доступна.
//
// Возвращаемое значение:
// ДоступныеУчетныеЗаписи - ТаблицаЗначений - С колонками:
//    Ссылка       - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты - Ссылка на учетную запись.
//    Наименование - Строка - Наименование учетной записи.
//    Адрес        - Строка - Адрес электронной почты.
//
Функция ДоступныеУчетныеЗаписи(Знач ДляОтправки = Неопределено,
										Знач ДляПолучения  = Неопределено,
										Знач ВключатьСистемнуюУчетнуюЗапись = Истина) Экспорт
	
	Если Не ПравоДоступа("Чтение", Метаданные.Справочники.УчетныеЗаписиЭлектроннойПочты) Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УчетныеЗаписиЭлектроннойПочты.Ссылка КАК Ссылка,
	|	УчетныеЗаписиЭлектроннойПочты.Наименование КАК Наименование,
	|	УчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты КАК Адрес
	|ИЗ
	|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	|ГДЕ
	|	УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА &ДляОтправки = НЕОПРЕДЕЛЕНО
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляОтправки = &ДляОтправки
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ДляПолучения = НЕОПРЕДЕЛЕНО
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляПолучения = &ДляПолучения
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ВключатьСистемнуюУчетнуюЗапись
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ УчетныеЗаписиЭлектроннойПочты.Ссылка <> ЗНАЧЕНИЕ(Справочник.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты)
	|		КОНЕЦ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Параметры.Вставить("ДляОтправки", ДляОтправки);
	Запрос.Параметры.Вставить("ДляПолучения", ДляПолучения);
	Запрос.Параметры.Вставить("ВключатьСистемнуюУчетнуюЗапись", ВключатьСистемнуюУчетнуюЗапись);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Получает ссылку на учетную запись по виду назначения учетной записи.
//
// Возвращаемое значение:
//  УчетнаяЗапись - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты - ссылка
//                  на описание учетной записи.
//
Функция СистемнаяУчетнаяЗапись() Экспорт
	
	Возврат Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	
КонецФункции

// Проверяет, что системная учетная запись доступна (может быть использована).
//
Функция ПроверитьСистемнаяУчетнаяЗаписьДоступна() Экспорт
	
	Возврат РаботаСПочтовымиСообщениямиСлужебный.ПроверитьСистемнаяУчетнаяЗаписьДоступна();
	
КонецФункции

// Возвращает Истину, если есть по меньшей мере одна настроенная учетная запись для отправки почты.
Функция ДоступнаОтправкаПисем() Экспорт
	Возврат ДоступныеУчетныеЗаписи(Истина).Количество() > 0 
		Или ПравоДоступа("Изменение", Метаданные.Справочники.УчетныеЗаписиЭлектроннойПочты);
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Устаревшие процедуры и функции.

// Устарела. Следует использовать ОтправитьПочтовоеСообщение.
//
// Производит отправку сообщения электронной почты.
//
// Параметры:
// УчетнаяЗапись - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты - ссылка на
//                 учетную запись электронной почты.
// ПараметрыПисьма - структура - содержит всю необходимую информацию о письме:
//                   содержит следующие ключи:
//    Кому*      - Массив структур, строка - Интернет адрес получателя письма.
//                 Адрес         - строка - почтовый адрес.
//                 Представление - строка - имя адресата.
//
//    Тема*      - строка - тема почтового сообщения.
//    Тело*      - тело почтового сообщения (простой текст в кодировке win-1251).
//    Вложения   - соответствие
//                 ключ     - наименованиеВложения - строка - наименование вложения
//                 значение - ДвоичныеДанные - данные вложения.
//
// Дополнительные ключи структуры, которые могут использоваться:
//    АдресОтвета - соответствие - см. такие же поля как и кому.
//    Пароль      - строка - пароль для доступа учетной записи.
//    ТипТекста   - Строка / Перечисление.ТипыТекстовЭлектронныхПисем определяет тип переданного теста
//                  допустимые значения:
//                  HTML/ТипыТекстовЭлектронныхПисем.HTML - текст почтового сообщения в формате HTML.
//                  ПростойТекст/ТипыТекстовЭлектронныхПисем.ПростойТекст - простой текст почтового сообщения.
//                                                                          Отображается "как есть" (значение по
//                                                                          умолчанию).
//                  РазмеченныйТекст/ТипыТекстовЭлектронныхПисем.РазмеченныйТекст - текст почтового сообщения в формате
//                                                                                  Rich Text.
//
//    Прим.: параметры письма помеченные знаком '*' являются обязательными
//           т.е. к началу работы функции считается что они уже заполнены.
//
// Возвращаемое значение:
// Строка - идентификатор отправленного почтового сообщения на smtp сервере.
//
// ПРИМЕЧАНИЕ: функция может вызвать исключение, которое требуется обработать.
//
Функция ОтправитьСообщение(Знач УчетнаяЗапись, Знач ПараметрыПисьма) Экспорт
	
	Возврат ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
	
КонецФункции

// Устарела. Следует использовать ДоступныеУчетныеЗаписи.
Функция ПолучитьДоступныеУчетныеЗаписи(Знач ДляОтправки = Неопределено,
										Знач ДляПолучения  = Неопределено,
										Знач ВключатьСистемнуюУчетнуюЗапись = Истина) Экспорт
	
	Возврат ДоступныеУчетныеЗаписи(ДляОтправки, ДляПолучения, ВключатьСистемнуюУчетнуюЗапись);
	
КонецФункции

// Устарела. Следует использовать СистемнаяУчетнаяЗапись.
Функция ПолучитьСистемнуюУчетнуюЗапись() Экспорт
	
	Возврат СистемнаяУчетнаяЗапись();
	
КонецФункции

#КонецОбласти
